name: environment-files
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Append to $GITEA_PATH"
        run: |
          echo "$HOME/someFolder" >> $GITEA_PATH
      - name: "Append some more to $GITEA_PATH"
        run: |
          echo "$HOME/someOtherFolder" >> $GITEA_PATH
      - name: "Check PATH"
        run: |
          echo "${PATH}"
          if [[ ! "${PATH}" =~ .*"$HOME/"someOtherFolder.*"$HOME/"someFolder.* ]]; then
            echo "${PATH} doesn't match .*someOtherFolder.*someFolder.*"
            exit 1
          fi
      - name: "Prepend"
        run: |
          if ls | grep -q 'called ls' ; then
            echo 'ls was overridden already?'
            exit 2
          fi
          path_add=$(mktemp -d)
          cat > $path_add/ls <<LS
          #!/bin/sh
          echo 'called ls'
          LS
          chmod +x $path_add/ls
          echo $path_add >> $GITEA_PATH
      - name: "Verify prepend"
        run: |
          if ! ls | grep -q 'called ls' ; then
            echo 'ls was not overridden'
            exit 2
          fi
      - name: "Write single line env to $GITEA_ENV"
        run: |
          echo "KEY=value" >> $GITEA_ENV
      - name: "Check single line env"
        run: |
          if [[ "${KEY}" != "value" ]]; then
            echo "${KEY} doesn't == 'value'"
            exit 1
          fi
      - name: "Write single line env with more than one 'equals' signs to $GITEA_ENV"
        run: |
          echo "KEY=value=anothervalue" >> $GITEA_ENV
      - name: "Check single line env"
        run: |
          if [[ "${KEY}" != "value=anothervalue" ]]; then
            echo "${KEY} doesn't == 'value=anothervalue'"
            exit 1
          fi
      - name: "Write multiline env to $GITEA_ENV"
        run: |
          echo 'KEY2<<EOF' >> $GITEA_ENV
          echo value2 >> $GITEA_ENV
          echo 'EOF' >> $GITEA_ENV
      - name: "Check multiline line env"
        run: |
          if [[ "${KEY2}" != "value2" ]]; then
            echo "${KEY2} doesn't == 'value'"
            exit 1
          fi
      - name: "Write multiline env with UUID to $GITEA_ENV"
        run: |
          echo 'KEY3<<ghadelimiter_b8273c6d-d535-419a-a010-b0aaac240e36' >> $GITEA_ENV
          echo value3 >> $GITEA_ENV
          echo 'ghadelimiter_b8273c6d-d535-419a-a010-b0aaac240e36' >> $GITEA_ENV
      - name: "Check multiline env with UUID to $GITEA_ENV"
        run: |
          if [[ "${KEY3}" != "value3" ]]; then
            echo "${KEY3} doesn't == 'value3'"
            exit 1
          fi
      - name: "Write single line output to $GITEA_OUTPUT"
        id: write-single-output
        run: |
          echo "KEY=value" >> $GITEA_OUTPUT
      - name: "Check single line output"
        run: |
          if [[ "${{ steps.write-single-output.outputs.KEY }}" != "value" ]]; then
            echo "${{ steps.write-single-output.outputs.KEY }} doesn't == 'value'"
            exit 1
          fi
      - name: "Write multiline output to $GITEA_OUTPUT"
        id: write-multi-output
        run: |
          echo 'KEY2<<EOF' >> $GITEA_OUTPUT
          echo value2 >> $GITEA_OUTPUT
          echo 'EOF' >> $GITEA_OUTPUT
      - name: "Check multiline output"
        run: |
          if [[ "${{ steps.write-multi-output.outputs.KEY2 }}" != "value2" ]]; then
            echo "${{ steps.write-multi-output.outputs.KEY2 }} doesn't == 'value2'"
            exit 1
          fi